<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RevGear</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/admin/addProduct.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    .cropped-image {
      width: 100px;
      height: 100px;
      margin: 10px;
      object-fit: cover;
    }

    .delete-button {
      display: block;
      margin-top: 5px;
      background-color: #ff4d4d;
      color: white;
      border: none;
      padding: 5px;
      cursor: pointer;
    }

    .image-wrapper {
      display: inline-block;
      text-align: center;
      margin: 10px;
    }

    .size-btn.selected {
      background-color: #007bff;
      color: white;
    }

    .size-input-container {
      display: flex;
      gap: 10px;
      margin-top: 10px;
    }

    .size-input-group {
      display: none;
      align-items: center;
    }

    .size-input-group.active {
      display: flex;
    }

    .size-input-group label {
      margin-right: 10px;
    }

    .size-input-group input {
      width: 100px;
    }
  </style>
</head>

<body>
    <div class="dashboard">
        <div class="sidebar" id="sidebar">
            

            <div class="admin-profile">
                <div class="admin-avatar">A</div>
                
            </div>

            <ul class="nav-menu">
                <a href="/admin/dashboard" class="nav-item">
                    <i class="fas fa-tachometer-alt"></i>
                    <span>Dashboard</span>
                </a>
                <a href="/admin/product" class="nav-item active">
                    <i class="fas fa-box"></i>
                    <span>Products</span>
                </a>
                <a href="/admin/customer" class="nav-item ">
                    <i class="fas fa-users"></i>
                    <span>Users</span>
                </a>
                <a href="/admin/category" class="nav-item">
                    <i class="fas fa-folder-open"></i>
                    <span>Categories</span>
                </a>
                <a href="/admin/orderlists" class="nav-item">
                    <i class="fas fa-shopping-cart"></i>
                    <span>Orders</span>
                </a>
                <a href="/admin/coupon" class="nav-item">
                    <i class="fas fa-tags"></i>
                    <span>Coupons</span>
                </a>
               
                <a href="/admin/offer" class="nav-item">
                  <i class="fas fa-gift"></i>
                  <span>Offer</span>
              </a>
            </ul>
        </div>

        <div class="main-content">
            <div class="header">
                <h1>RevGear</h1>
                <a href="/admin/product" id="adminlogout">Back</a>
            </div>
      <br>
      <div class="add-product-container">
        <div class="product-info-container">
          <form action="/admin/editProduct/<%= product._id %>" method="post" enctype="multipart/form-data">
            
            <div class="form-group image-upload">
              <label for="product-images">Product Images (Max 4)</label>
              <div class="image-upload-container">
         
                <% if (product.productImage && product.productImage.length > 0) { %>
                <% product.productImage.forEach(image => { %>
                <div class="image-wrapper">
                  <img src="<%= image %>" class="cropped-image" alt="Product Image">
                  <button type="button" class="delete-button" data-image="<%= image %>">Delete</button>
                </div>
                <% }); %>
                <% } %>
                <div class="image-upload-item" id="add-image-button">
                  <i class="fas fa-plus"></i>
                  <span>Add Image</span>
                </div>
                <input type="file" id="image-input" name="productImage" accept="image/*" style="display: none;">
              </div>
              <div id="image-preview-container" class="image-preview-container"></div>
            </div>


            
            <div id="cropper-modal" class="modal" style="display: none;">
              <div class="modal-content">
                <h2>Crop Image</h2>
                <div id="cropper-container">
                  <img id="cropper-image" alt="To be cropped" />
                </div>
                <button id="crop-button">Crop</button>
                <button id="cancel-crop-button">Cancel</button>
              </div>
            </div>

            <div class="form-group">
              <label for="product-name">Product Name</label>
              <input type="text" name="productName" id="product-name" value="<%= product.productName %>" placeholder="Type product name here..." required>
            </div>
            <div class="form-group">
              <label for="product-description">Product Description</label>
              <input type="text" name="description" id="product-description" value="<%= product.description %>" placeholder="Type product description here..." required>
            </div>

            <div class="form-group">
              <label for="product-category">Category</label>
              <select name="category" id="product-category" required>
                <option value="<%= product.category %>" selected>(Current) <%= product.category %></option>
                <% categories.forEach(category => { %>
                <% if (category.name !== product.category) { %>
                <option value="<%= category.name %>"><%= category.name %></option>
                <% } %>
                <% }); %>
              </select>

            </div>

            

            <div class="form-group">
              <label for="stock">Total Stock</label>
              <input type="number" name="quantity" value="<%= product.quantity %>" id="stock" placeholder="Total stock will be calculated automatically" >
            </div>

            <div class="form-group">
              <label for="product-price">Price</label>
              <input type="number" name="regularPrice" value="<%= product.regularPrice %>" id="product-price" placeholder="Enter price here..." required min="0" step="0.01">
            </div>
            <div class="form-group">
              <label for="product-offer">Offer (%)</label>
              <input type="number" name="productOffer" value="<%= product.productOffer %>" id="product-offer" placeholder="Enter offer percentage here..." min="0" max="100" step="0.01">
            </div>
            <div class="form-group">
              <label for="product-sale-price">Sale Price</label>
              <input type="number" name="salePrice" value="<%= product.salePrice %>" id="product-sale-price" placeholder="Sale price will be calculated..." min="0" step="0.01" readonly>
            </div>
            <button type="submit" class="save-product">Update Product</button>
          </form>
        </div>
      </div>
    </div>

    <script>
  const maxImages = 4;
const imageInput = document.getElementById('image-input');
const imagePreviewContainer = document.getElementById('image-preview-container');
const addImageButton = document.getElementById('add-image-button');
const cropperModal = document.getElementById('cropper-modal');
const cropperImage = document.getElementById('cropper-image');
const cropButton = document.getElementById('crop-button');
const cancelCropButton = document.getElementById('cancel-crop-button');

let cropper;


addImageButton.addEventListener('click', () => {
  const imageCount = imagePreviewContainer.querySelectorAll('img').length;
  if (imageCount < maxImages) {
    imageInput.click();
  } else {
    Swal.fire({
      icon: 'warning',
      title: 'Oops...',
      text: 'Maximum of 4 images allowed.',
    });
  }
});

imageInput.addEventListener('change', (e) => {
  const file = e.target.files[0];
  const imageCount = imagePreviewContainer.querySelectorAll('img').length;
  
  if (file && imageCount < maxImages) {
    const reader = new FileReader();
    reader.onload = (event) => {
      cropperImage.src = event.target.result;
      openCropperModal();
    };
    reader.readAsDataURL(file);
  }
});

function openCropperModal() {
  cropperModal.style.display = 'block';
  cropper = new Cropper(cropperImage, {
    aspectRatio: 1,
    viewMode: 1,
  });
}

function closeCropperModal() {
  cropperModal.style.display = 'none';
  cropper.destroy();
  cropper = null;
}

cropButton.addEventListener('click', (event) => {
  event.preventDefault();
  const croppedCanvas = cropper.getCroppedCanvas();

  croppedCanvas.toBlob((blob) => {
    const dataTransfer = new DataTransfer();
    const file = new File([blob], 'cropped-image.png', { type: 'image/png' });
    dataTransfer.items.add(file);
    imageInput.files = dataTransfer.files;

    const croppedImage = document.createElement('img');
    const deleteButton = document.createElement('button');

    croppedImage.src = croppedCanvas.toDataURL('image/png');
    croppedImage.classList.add('cropped-image');

    deleteButton.textContent = 'Delete';
    deleteButton.classList.add('delete-button');
    deleteButton.addEventListener('click', () => {
      croppedImage.parentElement.remove();
      updateImageCount();
    });

    const imageWrapper = document.createElement('div');
    imageWrapper.classList.add('image-wrapper');
    imageWrapper.appendChild(croppedImage);
    imageWrapper.appendChild(deleteButton);

    imagePreviewContainer.appendChild(imageWrapper);
    closeCropperModal();
    updateImageCount();
  }, 'image/png');
});

function updateImageCount() {
  const imageCount = imagePreviewContainer.querySelectorAll('img').length;
  imageInput.disabled = imageCount >= maxImages;
}


document.querySelectorAll('.delete-button').forEach(button => {
  button.addEventListener('click', function() {
    this.parentElement.remove();
    updateImageCount();
  });
});


const priceInput = document.getElementById('product-price');
const offerInput = document.getElementById('product-offer');
const salePriceInput = document.getElementById('product-sale-price');

function calculateSalePrice() {
  const regularPrice = parseFloat(priceInput.value) || 0;
  const productOffer = parseFloat(offerInput.value) || 0;

  if (regularPrice <= 0 || productOffer < 0 || productOffer >= 100) {
    return;
  }

  const salePrice = regularPrice - (regularPrice * (productOffer / 100));
  salePriceInput.value = salePrice.toFixed(2);
}

priceInput.addEventListener('input', calculateSalePrice);
offerInput.addEventListener('input', calculateSalePrice);


document.querySelector('form').addEventListener('submit', function(event) {
  event.preventDefault();
  
  const validationFields = {
    productName: {
      value: document.getElementById('product-name').value.trim(),
      rules: {
        required: true,
        minLength: 3,
        maxLength: 100
      }
    },
    description: {
      value: document.getElementById('product-description').value.trim(),
      rules: {
        required: true,
        minLength: 5,
        maxLength: 1000
      }
    },
    category: {
      value: document.getElementById('product-category').value,
      rules: {
        required: true
      }
    },
    stock: {
      value: parseInt(document.getElementById('stock').value),
      rules: {
        required: true,
        min: 1,
        max: 10000
      }
    },
    price: {
      value: parseFloat(document.getElementById('product-price').value),
      rules: {
        required: true,
        min: 0.01,
        max: 1000000
      }
    },
    offer: {
      value: parseFloat(document.getElementById('product-offer').value),
      rules: {
        required: true,
        min: 0,
        max: 99.99
      }
    }
  };


  for (const [field, data] of Object.entries(validationFields)) {
    if (data.rules.required && !data.value) {
      showError(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`);
      return;
    }
    if (data.rules.minLength && data.value.length < data.rules.minLength) {
      showError(`${field} must be at least ${data.rules.minLength} characters`);
      return;
    }
    if (data.rules.maxLength && data.value.length > data.rules.maxLength) {
      showError(`${field} cannot exceed ${data.rules.maxLength} characters`);
      return;
    }
    if (data.rules.min && data.value < data.rules.min) {
      showError(`${field} must be at least ${data.rules.min}`);
      return;
    }
    if (data.rules.max && data.value > data.rules.max) {
      showError(`${field} cannot exceed ${data.rules.max}`);
      return;
    }
  }

 
  const images = document.querySelectorAll('.cropped-image');
  if (images.length === 0) {
    showError('At least one product image is required');
    return;
  }


  Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to update this product?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, update it!',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      this.submit();
    }
  });
});

function showError(message) {
  Swal.fire({
    icon: 'error',
    title: 'Validation Error',
    text: message
  });
}


const numericInputs = ['stock', 'product-price', 'product-offer'];
numericInputs.forEach(id => {
  const input = document.getElementById(id);
  
  input.addEventListener('input', function() {
    const value = parseFloat(this.value);
    if (this.value && (isNaN(value) || value < 0)) {
      this.classList.add('invalid');
    } else {
      this.classList.remove('invalid');
    }
  });

  input.addEventListener('keypress', function(e) {
    if (!/[\d.]/.test(e.key)) {
      e.preventDefault();
    }
  });
});

cancelCropButton.addEventListener('click', () => {
  closeCropperModal();
});

</script>
</body>

</html>