<%- include("../partials/header.ejs")  %>

<style>
    @keyframes checkAnimation {
        0% { transform: scale(0); opacity: 0; }
        50% { transform: scale(1.2); opacity: 1; }
        100% { transform: scale(1); opacity: 1; }
    }
    .error-checkmark {
        animation: checkAnimation 0.5s ease-in-out;
    }
</style>

<body class="bg-gray-50 font-sans">
    <div class="container mx-auto px-4 py-16 max-w-xl">
        <div class="bg-white shadow-2xl rounded-2xl p-8 text-center">
            <div class="error-checkmark mb-6">
                <svg class="mx-auto w-24 h-24 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M12 2a10 10 0 100 20 10 10 0 000-20z"></path>
                  </svg>
                  
            </div>

            <h1 class="text-3xl font-bold text-gray-800 mb-4">Pyment Failed!</h1>
            <p class="text-gray-600 mb-6">Sorry for the  Inconveniencee.</p>

           

         

            <div class="mt-8 flex space-x-4 justify-center">
                <a href="/home" class="flex-1 bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-colors flex items-center justify-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                    </svg>
                    Continue Shopping
                </a>
                <form onsubmit="event.preventDefault(); retryPayment('<%= order.orderId%>');" style="display: inline;">
                    <button type="button" 
                            class="bg-blue-600 text-white font-semibold py-2 px-4 rounded-md shadow hover:bg-blue-700 transition duration-200"
                            onclick="retryPayment('<%= order.orderId %>')">
                        Retry Payment
                    </button>
                </form>
                
            </div>
        </div>

        <div class="text-center mt-8 text-gray-500">
            <p>Need help? Contact our support at <a href="mailto:support@yourstore.com" class="text-blue-500 hover:underline">support@yourstore.com</a></p>
        </div>
    </div>


    <%- include("../partials/footer")  %>


    <script>
    
        gsap.from(".success-checkmark", {
            duration: 0.5,
            scale: 0,
            opacity: 0,
            ease: "back.out(1.7)"
        });

        gsap.from(".bg-green-50", {
            duration: 0.5,
            y: 50,
            opacity: 0,
            delay: 0.3
        });



        
    async function retryPayment(orderId) {
  try {
    // Call the backend API to create a Razorpay order
    const response = await fetch(`/retry-payment/${orderId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    console.log(data);

    if (!data.success) {
      throw new Error(data.message || 'Failed to initiate payment');
    }

    const options = {
      key: data.key,
      amount: data.amount,
      currency: data.currency,
      order_id: data.razorpayOrderId,
      name: 'Your Store',
      description: 'Order Payment',
      handler: function(response) {
        const paymentDetails = {
          razorpay_order_id: response.razorpay_order_id,
          razorpay_payment_id: response.razorpay_payment_id,
          razorpay_signature: response.razorpay_signature,
          orderId: orderId
        };

        fetch('/payment-success', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(paymentDetails),
        })
        .then(orderResponse => orderResponse.json())
        .then(orderData => {
          if (orderData.success) {
            window.location.href = `/orderconfirm/${orderId}`;
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Order Failed',
              text: orderData.message || 'Failed to place order.',
            });
          }
        })
        .catch(error => {
          console.error('Error placing order:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while placing the order.',
          });
        });
      },
      prefill: {
        name: 'Customer Name',
        email: 'customer@example.com',
        contact: '9999999999',
      },
      theme: {
        color: '#3399cc',
      },
    }; 

    const rzp = new Razorpay(options);
    rzp.open();
  } catch (error) {
    console.error('Payment retry error:', error);
    alert(error.message || 'Failed to initiate payment');
  }
}

    </script>