

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RevGear Shop</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/user/home.css">
  <link rel="stylesheet" href="/user/products.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <script src="
https://cdn.jsdelivr.net/npm/razorpay@2.9.5/dist/razorpay.min.js
"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<style>
  #dropdownMenu {
    display: none;
    position: absolute;
    right: 0;
    top: 100%;
    background: #1a202c;
    border-radius: 0.5rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    z-index: 50;
    overflow: hidden;
  }

  #dropdownMenu a {
    display: block;
    padding: 0.75rem 1rem;
    color: white;
    text-decoration: none;
    transition: background 0.2s;
  }

  #dropdownMenu a:hover {
    background: #2d3748;
  }

  /* Mobile menu styles */
  #mobileMenu {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.95);
    z-index: 40;
  }

  #mobileMenu.active {
    display: block;
  }

  .search-transition {
    transition: all 0.3s ease;
  }

  @media (max-width: 768px) {
    .search-container.active {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      padding: 1rem;
      background: black;
      z-index: 30;
    }
  }
</style>
</head>

<body class="bg-gray-50">
<header class="bg-black text-white py-6 shadow-lg relative">
  <div class="container mx-auto px-4">
    <nav class="flex justify-between items-center">
      <!-- Logo -->
      <div class="text-2xl font-bold cursor-pointer">REVGEAR</div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-6">
        <a href="/home" class="hover:text-red-500 transition-colors">Home</a>
        <a href="/products" class="hover:text-red-500 transition-colors">Products</a>
        <a href="/categories" class="hover:text-red-500 transition-colors">Categories</a>
      </div>

      <!-- Search and Icons -->
      <div class="hidden md:flex items-center space-x-6 z-10">
        <!-- Desktop Search -->
        <div class="relative flex-1 mx-8">
          <input type="text" id="searchInput" placeholder="Search for products..." 
            class="w-full max-w-2xl bg-gray-800 text-white px-6 py-3 rounded-full focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-300 search-transition" 
            autocomplete="off" />
          <button onclick="performSearch()" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-red-500 hover:text-red-400 transition-colors">
            <i class="fas fa-search text-lg"></i>
          </button>
          <div id="searchSuggestions" class="absolute w-full mt-2 bg-white rounded-lg shadow-xl max-h-96 overflow-y-auto hidden z-50"></div>
        </div>

        <!-- Icons -->
        <div class="flex items-center space-x-6">
          <a href="/wishlist" class="text-xl hover:text-red-500 transition-colors">
            <i class="fas fa-heart"></i>
          </a>
          <a href="/cart" class="text-xl hover:text-red-500 transition-colors">
            <i class="fas fa-shopping-cart"></i>
          </a>
          <div class="relative">
            <button id="dropdownButton" class="flex items-center space-x-2 text-xl hover:text-red-500 transition-colors focus:outline-none">
              <i class="fas fa-user"></i>
            </button>
            <div id="dropdownMenu"></div>
          </div>
        </div>
      </div>

      <!-- Mobile Controls - Grouped on right side -->
      <div class="md:hidden flex items-center space-x-4">
        <!-- Mobile Search Button -->
        <button id="mobileSearchBtn" class="text-xl text-white">
          <i class="fas fa-search"></i>
        </button>
        
        <!-- Mobile Menu Button -->
        <button id="mobileMenuBtn" class="text-white focus:outline-none">
          <i class="fas fa-bars text-2xl"></i>
        </button>
      </div>
    </nav>

    <!-- Mobile Search Container -->
    <div id="mobileSearchContainer" class="md:hidden mt-4 hidden px-4">
      <div class="relative">
        <input type="text" id="mobileSearchInput" placeholder="Search for products..." 
          class="w-full bg-gray-800 text-white px-6 py-3 rounded-full focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-300" 
          autocomplete="off" />
        <button onclick="performSearch('mobile')" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-red-500 hover:text-red-400 transition-colors">
          <i class="fas fa-search text-lg"></i>
        </button>
        <div id="mobileSearchSuggestions" class="absolute w-full mt-2 bg-white rounded-lg shadow-xl max-h-96 overflow-y-auto hidden z-50"></div>
      </div>
    </div>
  </div>
</header>

<!-- Mobile Menu Overlay -->
<div id="mobileMenu" class="md:hidden">
  <div class="flex flex-col h-full">
    <div class="flex justify-between items-center p-6 border-b border-gray-800">
      <div class="text-2xl font-bold text-white">REVGEAR</div>
      <button id="mobileMenuCloseBtn" class="text-white focus:outline-none">
        <i class="fas fa-times text-2xl"></i>
      </button>
    </div>
    <div class="flex-1 p-6">
      <div class="flex flex-col space-y-6">
        <a href="/home" class="text-white text-lg hover:text-red-500 transition-colors">Home</a>
        <a href="/products" class="text-white text-lg hover:text-red-500 transition-colors">Products</a>
        <a href="/categories" class="text-white text-lg hover:text-red-500 transition-colors">Categories</a>
        <a href="/wishlist" class="text-white text-lg hover:text-red-500 transition-colors">
          <i class="fas fa-heart mr-2"></i> Wishlist
        </a>
        <a href="/cart" class="text-white text-lg hover:text-red-500 transition-colors">
          <i class="fas fa-shopping-cart mr-2"></i> Cart
        </a>
        <a href="/profile" class="text-white text-lg hover:text-red-500 transition-colors">
          <i class="fas fa-user mr-2"></i> Profile
        </a>
      </div>
    </div>
  </div>
</div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <script>

// Mobile menu functionality
const mobileMenuBtn = document.getElementById('mobileMenuBtn');
const mobileMenuCloseBtn = document.getElementById('mobileMenuCloseBtn');
const mobileMenu = document.getElementById('mobileMenu');
const mobileSearchBtn = document.getElementById('mobileSearchBtn');
const mobileSearchContainer = document.getElementById('mobileSearchContainer');

mobileMenuBtn.addEventListener('click', () => {
  mobileMenu.classList.add('active');
  document.body.style.overflow = 'hidden';
});

mobileMenuCloseBtn.addEventListener('click', () => {
  mobileMenu.classList.remove('active');
  document.body.style.overflow = 'auto';
});

mobileSearchBtn.addEventListener('click', () => {
  mobileSearchContainer.classList.toggle('hidden');
  if (!mobileSearchContainer.classList.contains('hidden')) {
    document.getElementById('mobileSearchInput').focus();
  }
});

mobileMenu.addEventListener('click', (e) => {
  if (e.target === mobileMenu) {
    mobileMenu.classList.remove('active');
    document.body.style.overflow = 'auto';
  }
});

// Dropdown menu functionality
const dropdownButton = document.getElementById("dropdownButton");
const dropdownMenu = document.getElementById("dropdownMenu");

dropdownButton.addEventListener("click", () => {
  if (dropdownMenu.style.display === "none" || dropdownMenu.style.display === "") {
    dropdownMenu.style.display = "block";
  } else {
    dropdownMenu.style.display = "none";
  }
});

window.addEventListener("click", (event) => {
  if (!dropdownButton.contains(event.target) && !dropdownMenu.contains(event.target)) {
    dropdownMenu.style.display = "none";
  }
});

// Search elements
const searchInput = document.getElementById('searchInput');
const searchSuggestions = document.getElementById('searchSuggestions');
const mobileSearchInput = document.getElementById('mobileSearchInput');
const mobileSearchSuggestions = document.getElementById('mobileSearchSuggestions');

// Debounce function
let searchTimeout;
function debounce(func, wait) {
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(searchTimeout);
      func(...args);
    };
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(later, wait);
  };
}

// Search functionality setup
function setupSearch(inputElement, suggestionsElement) {
  inputElement.addEventListener('focus', () => {
    if (inputElement.value.trim()) {
      suggestionsElement.classList.remove('hidden');
    }
  });

  inputElement.addEventListener('blur', (e) => {
    if (!e.relatedTarget?.closest(`#${suggestionsElement.id}`)) {
      suggestionsElement.classList.add('hidden');
    }
  });

  inputElement.addEventListener('input', (e) => {
    debouncedSearch(e.target.value, suggestionsElement);
  });

  inputElement.addEventListener('keydown', (e) => {
    if (!suggestionsElement.classList.contains('hidden')) {
      const suggestions = suggestionsElement.querySelectorAll('a');
      const currentIndex = Array.from(suggestions).findIndex(suggestion =>
        suggestion.classList.contains('bg-gray-50'));

      switch (e.key) {
        case 'ArrowDown':
          e.preventDefault();
          if (currentIndex < suggestions.length - 1) {
            suggestions[currentIndex]?.classList.remove('bg-gray-50');
            suggestions[currentIndex + 1]?.classList.add('bg-gray-50');
            suggestions[currentIndex + 1]?.scrollIntoView({
              block: 'nearest'
            });
          }
          break;

        case 'ArrowUp':
          e.preventDefault();
          if (currentIndex > 0) {
            suggestions[currentIndex]?.classList.remove('bg-gray-50');
            suggestions[currentIndex - 1]?.classList.add('bg-gray-50');
            suggestions[currentIndex - 1]?.scrollIntoView({
              block: 'nearest'
            });
          }
          break;

        case 'Enter':
          e.preventDefault();
          const selectedSuggestion = suggestionsElement.querySelector('a.bg-gray-50');
          if (selectedSuggestion) {
            window.location.href = selectedSuggestion.href;
          } else if (inputElement.value.trim()) {
            window.location.href = `/search?query=${encodeURIComponent(inputElement.value.trim())}`;
          }
          break;

        case 'Escape':
          suggestionsElement.classList.add('hidden');
          inputElement.blur();
          break;
      }
    }
  });
}

// Initialize both search inputs
setupSearch(searchInput, searchSuggestions);
setupSearch(mobileSearchInput, mobileSearchSuggestions);

// Search handler
async function handleSearch(query, suggestionsElement) {
  if (!query.trim()) {
    suggestionsElement.classList.add('hidden');
    return;
  }

  try {
    suggestionsElement.classList.remove('hidden');
    suggestionsElement.innerHTML = `
      <div class="p-4 text-center text-gray-500">
        <i class="fas fa-spinner fa-spin mr-2"></i> Searching...
      </div>
    `;

    const response = await fetch(`/api/search/suggestions?q=${encodeURIComponent(query)}`);
    const data = await response.json();

    if (!response.ok) {
      throw new Error(data.message || 'Search failed');
    }

    if (!data.suggestions || data.suggestions.length === 0) {
      suggestionsElement.innerHTML = `
        <div class="p-4 text-center text-gray-500">
          No products found
        </div>
      `;
      return;
    }

    const suggestions = data.suggestions.map(product => `
      <a href="/product/${product._id}" 
        class="flex items-center p-4 hover:bg-gray-50 transition-colors border-b border-gray-100">
        <img src="${product.productImage[0] || '/placeholder-image.png'}" 
          alt="${product.productName}"
          class="w-16 h-16 object-cover rounded-lg mr-4"
          onerror="this.src='/placeholder-image.png'">
        <div class="flex-1">
          <div class="text-gray-900 font-medium text-lg">${product.productName}</div>
          <div class="text-gray-500">${product.category}</div>
        </div>
        <div class="text-red-500 font-semibold text-lg">
          ₹${product.salePrice.toLocaleString()}
        </div>
      </a>
    `).join('');

    suggestionsElement.innerHTML = suggestions;

  } catch (error) {
    console.error('Search error:', error);
    suggestionsElement.innerHTML = `
      <div class="p-4 text-center text-red-500">
        <i class="fas fa-exclamation-circle mr-2"></i>
        Failed to load search results
      </div>
    `;
  }
}

const debouncedSearch = debounce((query, element) => handleSearch(query, element), 300);

// Perform search function
function performSearch(type = 'desktop') {
  const inputElement = type === 'mobile' ? mobileSearchInput : searchInput;
  const query = inputElement.value.trim();
  console.log(query,"query")
  if (query) {
    window.location.href = `/search?query=${encodeURIComponent(query)}`;
  } else {
    Swal.fire({
      icon: 'warning',
      title: 'Empty Search',
      text: 'Please enter a search term',
      confirmButtonColor: '#EF4444'
    });
  }
}

// Session check and dropdown menu setup
document.addEventListener("DOMContentLoaded", async () => {
  const dropdownMenu = document.getElementById("dropdownMenu");

  const response = await fetch('/api/check-session');
  const data = await response.json();

  dropdownMenu.innerHTML = '';

  if (data.isAuthenticated) {
    dropdownMenu.innerHTML = `
      <a href="/profile" class="block px-4 py-2">Profile</a>
      <a href="/logout" class="block px-4 py-2">Logout</a>
    `;
  } else {
    dropdownMenu.innerHTML = `
      <a href="/login" class="block px-4 py-2">Login</a>
    `;
  }

  document.getElementById("dropdownButton").addEventListener("click", () => {
    dropdownMenu.classList.toggle("hidden");
  });
});

// Close suggestions when clicking outside
document.addEventListener('click', (e) => {
  if (!searchInput.contains(e.target) && !searchSuggestions.contains(e.target)) {
    searchSuggestions.classList.add('hidden');
  }
  if (!mobileSearchInput.contains(e.target) && !mobileSearchSuggestions.contains(e.target)) {
    mobileSearchSuggestions.classList.add('hidden');
  }
});

  </script>