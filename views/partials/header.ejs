

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RevGear Shop</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/user/home.css">
  <link rel="stylesheet" href="/user/products.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <script src="
https://cdn.jsdelivr.net/npm/razorpay@2.9.5/dist/razorpay.min.js
"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


  <style>
   
    #dropdownMenu {
      display: none;
      position: absolute;
      right: 0;
      top: 100%;
      background: #1a202c;
      border-radius: 0.5rem;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      z-index: 50;
      overflow: hidden;
    }

    #dropdownMenu a {
      display: block;
      padding: 0.75rem 1rem;
      color: white;
      text-decoration: none;
      transition: background 0.2s;
    }

    #dropdownMenu a:hover {
      background: #2d3748;
    }
  </style>
</head>

<body class="bg-gray-50">

  <header class="bg-black text-white py-6 shadow-lg relative">
    <div class="container mx-auto px-4">
      <nav class="flex justify-between items-center">
        
     
        <div class="text-2xl font-bold cursor-pointer">REVGEAR</div>
  
    
        <div class="hidden md:flex items-center space-x-6">
          <a href="/home" class="hover:text-red-500 transition-colors">Home</a>
          <a href="/products" class="hover:text-red-500 transition-colors">Products</a>
          <a href="/categories" class="hover:text-red-500 transition-colors">Categories</a>
        </div>
  
        
        <div class="flex items-center space-x-6 z-10 relative">
         
          <div class="hidden md:block relative flex-1 mx-8">
            <input type="text" id="searchInput" placeholder="Search for products..." class="w-full max-w-2xl bg-gray-800 text-white px-6 py-3 rounded-full focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-300 search-transition" autocomplete="off" />
            
            <button onclick="performSearch()" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-red-500 hover:text-red-400 transition-colors">
              <i class="fas fa-search text-lg"></i>
            </button>
          
            <div id="searchSuggestions" class="absolute w-full mt-2 bg-white rounded-lg shadow-xl max-h-96 overflow-y-auto hidden z-50">
         
            </div>
          </div>
  
          <a href="/wishlist" class="text-xl cursor-pointer hover:text-red-500 transition-colors">
            <i class="fas fa-heart"></i>
          </a>
  
          
          <a href="/cart" class="text-xl cursor-pointer hover:text-red-500 transition-colors">
            <i class="fas fa-shopping-cart"></i>
          </a>
  
         
          <div class="relative">
            <button id="dropdownButton" class="flex items-center space-x-2 text-xl cursor-pointer hover:text-red-500 transition-colors focus:outline-none">
                <i class="fas fa-user"></i>
            </button>
            <div id="dropdownMenu" class="absolute right-0 mt-2 bg-white text-black rounded-lg shadow-lg hidden">
               
            </div>
        </div>
        </div>
      </nav>
    </div>
  </header>
  

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <script>



    const dropdownButton = document.getElementById("dropdownButton");
    const dropdownMenu = document.getElementById("dropdownMenu");

    dropdownButton.addEventListener("click", () => {
      if (dropdownMenu.style.display === "none" || dropdownMenu.style.display === "") {
        dropdownMenu.style.display = "block";
      } else {
        dropdownMenu.style.display = "none";
      }
    });


    window.addEventListener("click", (event) => {
      if (!dropdownButton.contains(event.target) && !dropdownMenu.contains(event.target)) {
        dropdownMenu.style.display = "none";
      }
    });

   
    function expandSearchBar() {
      const searchInput = document.getElementById("searchInput");
      const clearButton = document.getElementById("clearSearchButton");
      searchInput.style.width = "300px";
      if (searchInput.value) {
        clearButton.style.display = "block";
      }
    }

    function handleSearch(event) {
      const query = event.target.value.trim();
      const clearButton = document.getElementById("clearSearchButton");
      if (query) {
        clearButton.style.display = "block";
        if (event.key === 'Enter') {
          window.location.href = `/search?query=${encodeURIComponent(query)}`;
        }
      } else {
        clearButton.style.display = "none";
      }
    }

   
    function clearSearchBar() {
      const searchInput = document.getElementById("searchInput");
      const clearButton = document.getElementById("clearSearchButton");
      searchInput.value = "";
      clearButton.style.display = "none";
    }
 function toggleClearButton() {
      const searchInput = document.getElementById("searchInput");
      const clearButton = document.getElementById("clearSearchButton");
      if (searchInput.value.trim()) {
        clearButton.style.display = "block";
      } else {
        clearButton.style.display = "none";
      }
    }







    let searchTimeout;

   
    function debounce(func, wait) {
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(searchTimeout);
          func(...args);
        };
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(later, wait);
      };
    }

    
    const searchInput = document.getElementById('searchInput');
    const searchSuggestions = document.getElementById('searchSuggestions');

   
    searchInput.addEventListener('focus', () => {
      searchInput.classList.add('expanded');
    });

    
    searchInput.addEventListener('blur', (e) => {
      if (!e.relatedTarget?.closest('#searchSuggestions')) {
        searchInput.classList.remove('expanded');
      }
    });

    
    async function handleSearch(query) {
      if (!query.trim()) {
        searchSuggestions.classList.add('hidden');
        return;
      }

      try {
     
        searchSuggestions.classList.remove('hidden');
        searchSuggestions.innerHTML = `
            <div class="p-4 text-center text-gray-500">
                <i class="fas fa-spinner fa-spin mr-2"></i> Searching...
            </div>
        `;

     
        const response = await fetch(`/api/search/suggestions?q=${encodeURIComponent(query)}`);
        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.message || 'Search failed');
        }

       
        if (!data.suggestions || data.suggestions.length === 0) {
          searchSuggestions.innerHTML = `
                <div class="p-4 text-center text-gray-500">
                    No products found
                </div>
            `;
          return;
        }

       
        const suggestions = data.suggestions.map(product => `
            <a href="/product/${product._id}" 
               class="flex items-center p-4 hover:bg-gray-50 transition-colors border-b border-gray-100">
                <img src="${product.productImage[0] || '/placeholder-image.png'}" 
                     alt="${product.productName}"
                     class="w-16 h-16 object-cover rounded-lg mr-4"
                     onerror="this.src='/placeholder-image.png'">
                <div class="flex-1">
                    <div class="text-gray-900 font-medium text-lg">${product.productName}</div>
                    <div class="text-gray-500">${product.category}</div>
                </div>
                <div class="text-red-500 font-semibold text-lg">
                    â‚¹${product.salePrice.toLocaleString()}
                </div>
            </a>
        `).join('');

        searchSuggestions.innerHTML = suggestions;

      } catch (error) {
        console.error('Search error:', error);
        searchSuggestions.innerHTML = `
            <div class="p-4 text-center text-red-500">
                <i class="fas fa-exclamation-circle mr-2"></i>
                Failed to load search results
            </div>
        `;
      }
    }

    const debouncedSearch = debounce((query) => handleSearch(query), 300);

   
    searchInput.addEventListener('input', (e) => {
      debouncedSearch(e.target.value);
    });

    searchInput.addEventListener('keydown', (e) => {
      if (!searchSuggestions.classList.contains('hidden')) {
        const suggestions = searchSuggestions.querySelectorAll('a');
        const currentIndex = Array.from(suggestions).findIndex(suggestion =>
          suggestion.classList.contains('bg-gray-50'));

        switch (e.key) {
          case 'ArrowDown':
            e.preventDefault();
            if (currentIndex < suggestions.length - 1) {
              suggestions[currentIndex]?.classList.remove('bg-gray-50');
              suggestions[currentIndex + 1]?.classList.add('bg-gray-50');
              suggestions[currentIndex + 1]?.scrollIntoView({
                block: 'nearest'
              });
            }
            break;

          case 'ArrowUp':
            e.preventDefault();
            if (currentIndex > 0) {
              suggestions[currentIndex]?.classList.remove('bg-gray-50');
              suggestions[currentIndex - 1]?.classList.add('bg-gray-50');
              suggestions[currentIndex - 1]?.scrollIntoView({
                block: 'nearest'
              });
            }
            break;

          case 'Enter':
            e.preventDefault();
            const selectedSuggestion = searchSuggestions.querySelector('a.bg-gray-50');
            if (selectedSuggestion) {
              window.location.href = selectedSuggestion.href;
            } else if (searchInput.value.trim()) {
              window.location.href = `/search?query=${encodeURIComponent(searchInput.value.trim())}`;
            }
            break;

          case 'Escape':
            searchSuggestions.classList.add('hidden');
            searchInput.blur();
            break;
        }
      }
    });

    
    document.addEventListener('click', (e) => {
      if (!searchInput.contains(e.target) && !searchSuggestions.contains(e.target)) {
        searchSuggestions.classList.add('hidden');
      }
    });

    
    function performSearch() {
      const query = searchInput.value.trim();
      if (query) {
        window.location.href = `/search?query=${encodeURIComponent(query)}`;
      } else {
      
        Swal.fire({
          icon: 'warning',
          title: 'Empty Search',
          text: 'Please enter a search term',
          confirmButtonColor: '#EF4444'
        });
      }
    }


    document.addEventListener("DOMContentLoaded", async () => {
        const dropdownMenu = document.getElementById("dropdownMenu");


        const response = await fetch('/api/check-session');
        const data = await response.json();

        
        dropdownMenu.innerHTML = '';

        if (data.isAuthenticated) {
          
            dropdownMenu.innerHTML = `
                <a href="/profile" class="block px-4 py-2">Profile</a>
                <a href="/logout" class="block px-4 py-2">Logout</a>
            `;
        } else {
           
            dropdownMenu.innerHTML = `
                <a href="/login" class="block px-4 py-2">Login</a>
               
            `;
        }

        document.getElementById("dropdownButton").addEventListener("click", () => {
            dropdownMenu.classList.toggle("hidden");
        });
    });

  </script>